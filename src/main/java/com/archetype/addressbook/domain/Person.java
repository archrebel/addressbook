/*
* This code has been generated by the Rebel: a code generator for modern Java.
* 
* For more details, please visit www.archetypesoftware.com.
*
* Drop us a line or two at feedback@archetypesoftware.com. We would love to hear from you.
*/
package com.archetype.addressbook.domain;

import java.util.*;
import java.time.*;

import javax.persistence.*;
import javax.validation.constraints.*;


// ----------- << imports@AAAAAAFrhEqmZE5LFZc= >>
// ----------- >>

/**
* A Person represents a real-world person and an entry in our addressbook.
*/

@Entity
// ----------- << class.annotations@AAAAAAFrhEqmZE5LFZc= >>
// ----------- >>
public class Person {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	// ----------- << id.annotations@AAAAAAFrhEqmZE5LFZc= >>
	// ----------- >>
	private Long id;

	@Version
	// ----------- << version.annotations@AAAAAAFrhEqmZE5LFZc= >>
	// ----------- >>
	private Long version;

	/**
	* The name of the Person.
	*/

	@NotNull
	@Column(nullable = false)
	// ----------- << attribute.annotations@AAAAAAFrhErw0E51DrE= >>
	// ----------- >>
	private String name;

	/**
	* Sometimes it is desirable to add additional qualifiers to the addressbook entry 
	* and the organization is one of the most frequent ones.
	*/

	@Column
	// ----------- << attribute.annotations@AAAAAAFrhEuGMU6KtUU= >>
	// ----------- >>
	private String organization;

	/**
	* Person's birthday.
	*/

	@Column
	// ----------- << attribute.annotations@AAAAAAFrhEr9bE58Bbg= >>
	// ----------- >>
	private LocalDate birthday;

	/**
	* An optional note.
	*/

	@Column
	// ----------- << attribute.annotations@AAAAAAFrhEsot06DiLw= >>
	// ----------- >>
	private String note;

	/**
	* A Person may have many different contacts.
	*/

	@OneToMany
	@JoinColumn(name = "person_id")
	// ----------- << attribute.annotations@AAAAAAFrhFnjaFFv7Xw= >>
	// ----------- >>
	private Set<Contact> contacts = new HashSet<>();

	// ----------- << getId.annotations@AAAAAAFrhEqmZE5LFZc= >>
	// ----------- >>
	public Long getId(){
		return id;
	}

	public String getName() {
		return name;
	}

	public String getOrganization() {
		return organization;
	}

	public LocalDate getBirthday() {
		return birthday;
	}

	public String getNote() {
		return note;
	}

	public Set<Contact> getContacts() {
		return contacts;
	}

	public Person setName(String name) {
		this.name = name;
		return this;
	}

	public Person setOrganization(String organization) {
		this.organization = organization;
		return this;
	}

	public Person setBirthday(LocalDate birthday) {
		this.birthday = birthday;
		return this;
	}

	public Person setNote(String note) {
		this.note = note;
		return this;
	}

	public Person linkContacts(Contact _contacts) {
		if (_contacts != null) {
			getContacts().add(_contacts);
		}
		return this;
	}

	public Person unlinkContacts(Contact _contacts) {
		if (_contacts != null) {
			getContacts().remove(_contacts);
		}
		return this;
	}

	public Person unlinkContacts(Iterator<Contact> it) {
		it.remove();
		return this;
	}

	// ----------- << equals.annotations@AAAAAAFrhEqmZE5LFZc= >>
	// ----------- >>
	@Override
	public boolean equals(Object obj) {
		if (super.equals(obj)) return true;
		if (getId() == null) return false;
		return obj instanceof Person && (getId().equals(((Person) obj).getId()));
	}

	// ----------- << hashCode.annotations@AAAAAAFrhEqmZE5LFZc= >>
	// ----------- >>
	@Override
	public int hashCode() {
		return 257;
	}

	// ----------- << method.annotations@AAAAAAFrhGtpWVXE2fU= >>
	// ----------- >>
	public Person() {
	// ----------- << method.body@AAAAAAFrhGtpWVXE2fU= >>
	// ----------- >>
	}
	/**
	* @param name name of the Person
	* @param organization name of the organization
	*/

	// ----------- << method.annotations@AAAAAAFrhGuAClXgZ8A= >>
	// ----------- >>
	public Person(String name, String organization) {
	// ----------- << method.body@AAAAAAFrhGuAClXgZ8A= >>
		this.name = name;
		this.organization = organization;
	// ----------- >>
	}
// ----------- << class.extras@AAAAAAFrhEqmZE5LFZc= >>
// ----------- >>
}